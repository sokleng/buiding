<?php

namespace CondoBundle\Repository;

use CondoBundle\Entity\Service;
use Doctrine\ORM\EntityRepository;
use WeBridge\UserBundle\Entity\User;

/**
 * CondominiumRepository.
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CondominiumRepository extends EntityRepository
{
    /**
     * Gets the condominium available (not already served) for a service.
     *
     * @param Service $service
     *
     * @return \Doctrine\ORM\QueryBuilder
     */
    public function findAvailableCondominiumsForService(Service $service)
    {
        $qb = $this->createQueryBuilder('condo');

        if (!$service->getCondominiums()->isEmpty()) {
            $qb->where('condo NOT IN (:condos)')
                ->setParameter('condos',  $service->getCondominiums())
            ;
        }
        $qb->orderBy('condo.name', 'ASC');

        return $qb;
    }

    /**
     * Gets all condominium for a given user.
     *
     * @param User $user
     *
     * @return \Doctrine\ORM\QueryBuilder
     */
    public function findUserCondominiums(User $user)
    {
        return $this->createQueryBuilder('condo')
            ->join('condo.units', 'unit')
            ->join('unit.residents', 'residents')
            ->where('residents.user = :user')
            ->setParameter('user', $user)
            ->orderBy('condo.name')
        ;
    }

    /**
     * Gets all condominium for a given manager.
     *
     * @param User $user
     *
     * @return \Doctrine\ORM\QueryBuilder
     */
    public function findManagerCondominiums(User $user)
    {
        return $this->createQueryBuilder('condo')
            ->join('condo.managers', 'managers')
            ->where('managers = :manager')
            ->setParameter('manager', $user)
            ->orderBy('condo.name')
            ;
    }
}
