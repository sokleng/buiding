<?php

namespace GenericOrderingServiceBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\QueryBuilder;
use WeBridge\UserBundle\Entity\User;
use CondoBundle\Entity\Unit;
use CondoBundle\Entity\Service;

/**
 * GenericOrderRepository.
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class GenericOrderRepository extends EntityRepository
{
    /**
     * Get all generic order by current user and unit.
     *
     * @param User $user
     * @param Unit $unit
     *
     * @return QueryBuilder
     */
    public function findOrderOfUserInUnit(
        User $user,
        Unit $unit
    ) {
        $queryBuilder = $this->createQueryBuilder('gd');
        $queryBuilder->where('gd.client = :client');
        $queryBuilder->andWhere('gd.unit = :unit');
        $queryBuilder->orderBy('gd.creationDate', 'DESC');
        $queryBuilder->setParameter('client', $user);
        $queryBuilder->setParameter('unit', $unit);

        return $queryBuilder;
    }

    /**
     * Get all generic order by status.
     *
     * @param Service $service
     * @param string  $orderStatus
     *
     * @return QueryBuilder
     */
    public function findOrderByOrderStatus(Service $service, $orderStatus)
    {
        return $this->createQueryBuilder('gd')
            ->where('gd.service = :service')
            ->andWhere('gd.status = :status')
            ->setParameter('service', $service)
            ->setParameter('status', $orderStatus)
            ->orderBy('gd.creationDate', 'DESC');
    }
}
