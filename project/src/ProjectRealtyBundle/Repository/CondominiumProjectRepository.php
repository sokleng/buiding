<?php

namespace ProjectRealtyBundle\Repository;

use Doctrine\ORM\EntityRepository;
use ProjectRealtyBundle\Entity\CondominiumProject;
use WeBridge\UserBundle\Entity\User;
use DeveloperBundle\Entity\Developer;

/**
 * CondominiumProjectRepository.
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CondominiumProjectRepository extends EntityRepository
{
    /**
     * Gets all Projects for a given manager.
     *
     * @param User $user
     *
     * @return \Doctrine\ORM\QueryBuilder
     */
    public function findManagerProjects(User $user)
    {
        return $this->createQueryBuilder('project')
            ->join('project.managers', 'managers')
            ->where('managers = :manager')
            ->setParameter('manager', $user)
            ->orderBy('project.name')
        ;
    }

    /**
     * @param string $partialName
     * @param User   $user
     *
     * @return CondominiumProject
     */
    public function searchByNameForUser($partialName, User $user)
    {
        return $this->createQueryBuilder('project')
            ->leftJoin('project.unitTypes', 'types')
            ->join('project.managers', 'managers')
            ->where('LOWER(project.name) LIKE :name')
            ->andWhere('managers = :manager')
            ->setParameter('name', strtolower("%$partialName%"))
            ->setParameter('manager', $user)
            ->getQuery()
            ->getOneOrNullResult();
    }

    /**
     * Gets all projects for a given developer.
     *
     * @param Developer $developer
     *
     * @return \Doctrine\ORM\QueryBuilder
     */
    public function findProjectsByDeveloper(Developer $developer)
    {
        return $this->createQueryBuilder('project')
            ->join('project.developer', 'developer')
            ->where('developer = :developer')
            ->setParameter('developer', $developer)
            ->orderBy('project.creationDate', 'DESC');
    }
}
